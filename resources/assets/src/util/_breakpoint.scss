/* ==========================================================================
  Variables
  ========================================================================== */

$breakpoints: (
  xsmall: 0,
  small: 600px,
  medium: 960px,
  large: 1280px
);

/* ==========================================================================
  Functions
  ========================================================================== */

@function breakpoint($value) {
  // Size or keyword
  $bp: nth($value, 1);

  // Value for max-width media queries
  $bp-max: 0;

  // Direction of media query (up, down, or only)
  $dir: if(length($value) > 1, nth($value, 2), up);

  // Eventual output
  $str: '';

  // Is it a named media query?
  $named: false;

  // Orientation media queries have a unique syntax
  @if $bp == 'landscape' or $bp == 'portrait' {
    @return '(orientation: #{$bp})';
  }
  @else if $bp == 'retina' {
    @return '(-webkit-min-device-pixel-ratio: 2), (min-resolution: 192dpi)';
  }

  // Pull a named breakpoint out of the $breakpoints map
  @if type-of($bp) == 'string' {
    @if $dir == 'only' or $dir == 'down' {
      $bp-max: next-breakpoint($bp);
    }

    $bp: map-get($breakpoints, $bp);
    $named: true;
  }

  @if $bp > 0px or $dir == 'only' or $dir == 'down' {
    // `only` ranges use the format `(min-width: n) and (max-width: n)`
    @if $dir == 'only' {
      // Only named media queries can have an "only" range
      @if $named == true {
        // Only use "min-width" if the floor is greater than 0
        @if $bp > 0px {
          $str: $str + '(min-width: #{$bp})';

          // Only add "and" to the media query if there's a ceiling
          @if $bp-max != null {
            $str: $str + ' and ';
          }
        }

        // Only use "max-width" if there's a ceiling
        @if $bp-max != null {
          $str: $str + '(max-width: #{$bp-max})';
        }
      }
      @else {
        @warn 'breakpoint(): Only named media queries can have an `only` range.';
      }
    }

    // `down` ranges use the format `(max-width: n)`
    @else if $dir == 'down' {
      $max: if($named, $bp-max, $bp);

      // Skip media query creation if input value is exactly "0 down",
      // unless the function was called as "small down", in which case it's just "small only"
      @if $named or $bp > 0px {
        @if $max != null {
          $str: $str + '(max-width: #{$max})';
        }
      }
    }

    // `up` ranges use the format `(min-width: n)`
    @else if $bp > 0px {
      $str: $str + '(min-width: #{$bp})';
    }
  }

  @return $str;
}

@function next-breakpoint($bp) {
  $values: map-keys($breakpoints);

  $i: index($values, $bp) + 1;

  @return map-get($breakpoints, nth($values, $i));
}

/* ==========================================================================
  Mixins
  ========================================================================== */

@mixin breakpoint($value) {
  $str: breakpoint($value);

  @media screen and #{$str} {
    @content;
  }
}
